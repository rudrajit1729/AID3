{"content": {"Introduction": {"para_sentences": {"para_0": "In this section, you will get some practice on the topic of solving problems using the Dynamic Programming technique. Attempt the problems by yourself before you look into the solution.", "para_1": "When we use term Dynamic Programming, the word \u201cProgramming\u201d refers to a tabular method, not to writing computer code."}, "li_sentences": {}}, "Exercises": {"para_sentences": {"para_0": "Given a list of n integers v1, v2,.... vn, the product sum is the largest number that can be formed by either multiplying or adding the adjacent numbers in the list. You can only multiply the adjacent numbers in the list.", "para_1": "For example,", "para_2": "For the list: (1, 2, 3, 1), the product sum is: 8 = 1 + (2 \u00d7 3) + 1", "para_3": "For the list: (2, 2, 1, 3, 2, 1, 2, 2, 1, 2), the product sum is 19 = (2 \u00d7 2) + 1 + (3 \u00d7 2) + 1 + (2 \u00d7 2) + 1 + 2.\u00a0", "para_4": "\u00a0", "para_5": "Given a rod of n meters and a list of prices (price[]) for different lengths of the rod, a rod of length i will have a price of price[i-1]. We want to sell the rod and make the maximum possible revenue. We can cut the rod into lengths of different sizes before selling. The price of each piece will be determined by the list of prices provided. What is the optimal amount of revenue we can get out of the rod given length, n and prices?", "para_6": "Example: Rod length: 4, price = [1,5,8,9,10]", "para_7": "The optimal revenue: 10", "para_8": "Explanation:", "para_9": "From the price array, the price of lengths 1 = 1, price of length 2 = 5, price of length 3 = 8, price of length 4 = 9, price of length 5 = 10", "para_10": "\u00a0", "para_11": "\u00a0", "para_12": "In the below code editor write a recursive solution to solve Rod Cutting problem using a naive approach. What is the time complexity of your program? The solution is in solution.py file. Optionally, you can access the solution from the GitHub link\n\n\nLinks to an external site..", "para_13": "", "para_14": "Write an algorithm to solve the Rod Cutting problem using Dynamic Programming memoization approach.\u00a0 The solution is in solution.py file. Optionally, you can access the solution from the GitHub link\n\n\nLinks to an external site..", "para_15": "", "para_16": "In below code editor write an algorithm to solve the Rod Cutting problem using the bottom up approach of Dynamic Programming. What is the time complexity of your algorithm?\u00a0 The solution is in solution.py file. Optionally, you can access the solution from the GitHub link\n\n\nLinks to an external site..", "para_17": "", "para_18": "\u00a0"}, "li_sentences": {}}, "Optional Additional Resources": {"para_sentences": {"para_0": "Refer to the following resources for additional reading."}, "li_sentences": {"ul_0": ["Section 15"]}}}, "heading_sentences": ["Exploration 3", "4: Dynamic Programming: Rod Cutting Problem Exercise"], "__pre_h2__": {"pre_h2_para_sentences": {}, "pre_h2_li_sentences": {}}, "content_links": {"ul_0": [[]]}, "preh2_links": {}}