{"content": {"Introduction": {"para_sentences": {"para_0": "In this module, we will study the fundamental concepts that will setup the foundation for the rest of the course. We will talk about three notations: O(\"big oh\"), \u03a9 (\"big omega\"), and \u03b8 (\"big theta\"), these will become our language for discussing the efficiency of algorithms (CLO2). We will see how we can prove the correctness of an algorithm using the induction technique (CLO1).\u00a0 We will use this knowledge to prove the correctness of a few algorithms and analyze their efficiency.\u00a0", "para_1": "In this course for coding assignments, we will use the Python programming language.\u00a0", "para_2": "\u00a0"}, "li_sentences": {}}, "Module Learning Outcomes": {"para_sentences": {"para_0": "After successful completion of this module, you should be able to do the following (in addition to answering the questions listed below):"}, "li_sentences": {"ol_0": ["Define the framework for analyzing an algorithm (CLO2)  What is an algorithm? How to write pseudocode? What is meant by running time of an algorithm? What is the order of growth?", "What is an algorithm?", "How to write pseudocode?", "What is meant by running time of an algorithm?", "What is the order of growth?", "Define O  \u03a9  and \u0398 (CLO2)  What is asymptotic notation? How to define O  \u03a9  and \u0398 informally? How to define O  \u03a9  and \u0398 formally? How to analyze the time complexity of non-recursive algorithms?", "What is asymptotic notation?", "How to define O  \u03a9  and \u0398 informally?", "How to define O  \u03a9  and \u0398 formally?", "How to analyze the time complexity of non-recursive algorithms?", "Prove the correctness of an algorithm using induction (CLO1)  What is a loop invariant? How to identify a loop invariant? How to prove the correctness of a non-recursive algorithm? How to prove the correctness of a recursive algorithm?", "What is a loop invariant?", "How to identify a loop invariant?", "How to prove the correctness of a non-recursive algorithm?", "How to prove the correctness of a recursive algorithm?"]}}, "Explorations": {"para_sentences": {"para_0": "Use the pages within this module to explore the following concepts:"}, "li_sentences": {"ul_0": ["The Framework for Analyzing an Algorithm", "Asymptotic Notations", "Mathematical Analysis of Algorithms", "Proving Correctness of an Algorithm"]}}, "Task List": {"para_sentences": {"para_0": "Please make sure to complete the following assignments and other tasks:", "para_1": "Banner Art: Pixabay\n\n\nLinks to an external site."}, "li_sentences": {"ul_0": ["View the explorations", "Complete the recommended but optional activities within the exploration pages", "Go through Journey from Algorithms to Industry", "Discussion: Introduce yourself", "Quiz: Asymptotic Notations and Correctness of Algorithms", "Homework: Asymptotic Notations and Correctness of Algorithms"]}}}, "heading_sentences": ["Week 1 - Overview"], "__pre_h2__": {"pre_h2_para_sentences": {}, "pre_h2_li_sentences": {}}, "content_links": {"ol_0": [[]], "ul_0": [[]]}, "preh2_links": {}}