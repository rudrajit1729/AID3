{"content": {"Algorithms": {"para_sentences": {"para_0": "An algorithm is a pattern for how to manipulate and transform information. It gives a sequence of step-by-step instructions for accomplishing some task. For example, you can think of a recipe as a kind of algorithm, since it gives you a sequence of step-by-step instructions for making some food item. So why do I say that an algorithm is a pattern? Because you will usually want your algorithm to work for all cases of a problem, not just one specific case. For example, if you write a program that applies a filter to a photo, you probably want it to work for any photo, not just one specific photo. In order to write an algorithm for this task, you have to see the pattern of what's similar about applying the filter to different photos and express that pattern in your algorithm."}, "li_sentences": {}}, "Computers": {"para_sentences": {"para_0": "We take computers for granted - they're a ubiquitous part of modern society. However they're really a pretty amazing concept. Not so much dedicated computing devices that just carry out one kind of task - those are more or less an advanced form of the tool-making that people have engaged in for millennia. But the idea of a general purpose programmable machine that can carry out any computational process you describe to it (as an algorithm) was revolutionary. Not right away - Charles Babbage first described the idea for his Analytical Engine in 1837, and it wasn't until 1941, more than a century later, that the first such machine was built - but once technology and people's imaginations caught up with the idea, it transformed our world.", "para_1": "Most modern computers follow a similar architecture that has the following basic components:"}, "li_sentences": {"ol_0": ["A CPU (central processing unit) is the processor that decodes and executes machine language instructions", "RAM (random access memory) is not actually random", "Secondary storage devices are where everything that you install or save on your computer is stored"]}}, "Computer Languages": {"para_sentences": {"para_0": "I mentioned in the overview that learning to program gives you a language in which to express algorithms. Algorithms are not tied to any specific form of expression, but for a computer to understand and execute our algorithms, we must use a mathematically precise grammar and syntax, i.e. a computer language. Such a language is also useful because it forces us to be very specific about how we want to manipulate or transform the relevant information - there is no room for ambiguity.", "para_1": "Computer CPUs only understand their own machine language, which is pretty tedious to read or write programs in. \"High-level\" languages were written to be easier for humans to work with, but in order for the computer to understand them, they have to be translated to the machine language of the computer they're running on. This can be done either all at once beforehand (in a compiled language), or as the program is running (in an interpreted language). Python is an interpreted language."}, "li_sentences": {}}, "Computer Programs": {"para_sentences": {"para_0": "A computer program is just an algorithm that is expressed in some specific computer language."}, "li_sentences": {}}, "Python": {"para_sentences": {"para_0": "Python is a computer language created by Guido van Rossum, and was first released in 1991. It was named for the comedy troupe Monty Python, so in material about Python you'll occasionally run across references to their work. There are two main branches of Python - Python 2 (which is being phased out) and Python 3. They are very similar in many ways, but for this course we'll stick to Python 3.", "para_1": "In this course and the next one, you will not learn everything there is to know about Python - that would be impossible. You will, however, learn a lot about Python and about computer programming in general."}, "li_sentences": {}}, "Interactive mode and Repls": {"para_sentences": {"para_0": "In future lessons, you will often see interactive boxes with Python code examples for you to run and experiment with. They will look like this:", "para_1": "The top part of the box with the white background is the sample code that I have provided. You can execute the sample code by clicking on the green arrow \"run\" button near the top. If you do this now, you should see \"Hello world\" appear in the bottom half with the black background. That is the program output.", "para_2": "You can modify the existing code in the Repl and click the \"run\" button again to see the results, or you can type code after the red \">\" angle bracket and hit \"Enter\" on your keyboard to interact with it without changing the existing code. I will sometimes give instructions for code you can enter also. You can also try your own experiments to satisfy your curiosity and make sure you understand the topic before moving on."}, "li_sentences": {}}}, "heading_sentences": ["Exploration: Some Context"], "__pre_h2__": {"pre_h2_para_sentences": {}, "pre_h2_li_sentences": {}}, "content_links": {"ol_0": [[]]}, "preh2_links": {}}