{"content": {"Print statements": {"para_sentences": {"para_0": "The print() function can be used to print out values. You just put the value you want to print inside the parentheses. Here's an example that prints \"Hello world.\"", "para_1": "A print statement can print more than one value - you just need to separate them with commas. By default, a space will be inserted between the values. Try this and see:", "para_2": "The two values in that print statement are different types - the first one is a string, the second one is a floating-point number.", "para_3": "We can produce the exact same output like this (give it a try!):", "para_4": "In this case we're printing a single string value, not a string value and a floating-point value."}, "li_sentences": {}}, "Types": {"para_sentences": {"para_0": "Python distinguishes between different types of values. Here we'll talk about four basic Python types: integers, floating-point numbers, strings and Booleans. We'll encounter some other types later in the course.", "para_1": "Integers are numeric values that don't contain a decimal point. In Python 3 integers can be as long as you want (within the limits of your computer's memory).", "para_2": "Floating-point numbers are numeric values that do contain a decimal point. In mathematics, these are called real numbers. Integers are a subset of the real numbers. The value 4 is an integer, but the value 4.0 is a floating-point number.", "para_3": "Floats can also be written using scientific notation, using either e or E followed by a positive or negative integer (the exponent).", "para_4": "The maximum value of a float is 1.7976931348623157e+308. Floats are stored as binary fractions. Unfortunately most fractional values cannot be represented exactly in binary. Just as 1/3 cannot be represented exactly in decimal notation with a finite number of digits (0.333333333333333...), 1/10 cannot be represented exactly in binary notation with a finite number of digits (0.000110011001100...). Because of this, floats are approximate values, but the approximation is accurate to several decimal places.", "para_5": "Strings are zero or more characters between a pair of quotation marks. You can use either single quotes or double quotes. The length of a string is only limited by your computer's memory.", "para_6": "", "para_7": "If you want to have a quotation mark be part of a string, there are two ways. One way is that if the string contains a double quote, you can use single quotes to mark the ends of the string (or vice-versa).", "para_8": "Another way is to put a backslash character in front of the quotation marks that are part of the string.", "para_9": "The backslash is an \"escape character\", because it escapes the normal significance of the following character. Because of that, if you want to have a backslash be part of a string, you need to put two of them in a row (the first one escapes the normal significance of the second one).", "para_10": "Normal strings cannot be split across multiple lines. Later we'll see a special kind of string (called a docstring) that can be.", "para_11": "There are only two Boolean values - True and False. The first letter of those values must be capitalized."}, "li_sentences": {}}, "Determining type": {"para_sentences": {"para_0": "We can use the type() function to tell us what the type of a particular value is. Try these examples to find out the type of the values in the parentheses."}, "li_sentences": {}}, "Now you try": {"para_sentences": {"para_0": "Now try doing the following exercises. Remember that this isn't part of your grade - it's here to reinforce your learning."}, "li_sentences": {}}, "Exercises": {"para_sentences": {"para_0": "(See the module overview for a link to example solutions.)", "para_1": "1. Write a statement that prints out the float value 290.73.", "para_2": "2. Write a statement that prints out the string value \"He replied, \"Never mind\", and shut the door.\"", "para_3": "3. Write a statement that prints out the bool value True (not the string value \"True\").", "para_4": "4. Write a statement that prints out the result of using the type command on the value 99.", "para_5": "5. Write a statement that prints out the type of the value \"What is your quest?\""}, "li_sentences": {}}}, "heading_sentences": ["Exploration: Print Statements & Types"], "__pre_h2__": {"pre_h2_para_sentences": {}, "pre_h2_li_sentences": {}}, "content_links": {"para_0": [0, 0, 0, 0, 0], "para_1": [0, 0, 0], "para_2": [0, 0, 0], "para_3": [0, 0, 0], "para_4": [0, 0, 0], "para_5": [0, 0], "para_6": [0], "para_7": [0], "para_8": [0], "para_9": [0], "para_10": [0], "para_11": [0]}, "preh2_links": {}}