{"content": {"Dictionary Data Types": {"para_sentences": {"para_0": "Another data type that's built-in to Python is called a dictionary. A dictionary is a way of storing key-value pairs. For example:", "para_1": "", "para_2": "The first column has the keys and the second column has their associated values (I added extra spaces to align the columns and colons just for ease of reading - it's not required). Each key can only have one value, but the same value can be used for multiple keys. Dictionaries, like lists, are mutable. However, unlike lists, you cannot index into a dictionary by the position of an element. You still use the square bracket notation, but instead of a positional index, you give the key that you want the associated value of.", "para_3": "It's easy to add a new key-value pair:", "para_4": "Or to change an existing key-value pair:", "para_5": "You can delete an entry using del:", "para_6": "If you print a dictionary, it will list all of its key-value pairs:", "para_7": "The keys in a dictionary must be immutable, but the associated values can be of any type. The keys are not required to all be the same type. You can even nest dictionaries. Here's an example of a dictionary with some string values and an integer value.", "para_8": "", "para_9": "You can declare an empty dictionary like so:", "para_10": "You can use in and not in to test whether a key is in a dictionary:", "para_11": "You can use len to get the number of key-value pairs in a dictionary:", "para_12": "You can use a for loop to iterate through the keys of a dictionary.", "para_13": "Through Python 3.6, dictionaries were not guaranteed to preserve a particular ordering. As of Python 3.7, dictionaries are guaranteed to preserve insertion order.", "para_14": "The clear method makes a dictionary empty:", "para_15": "As with lists, there are other operators, functions and methods available for working with dictionaries."}, "li_sentences": {}}, "Exercises": {"para_sentences": {"para_0": "(See the module overview for a link to example solutions.)", "para_1": "1. Make a dictionary called \"eng_to_span\" where the keys are the English words \"one\" through \"ten\", and the corresponding values are their Spanish translations.", "para_2": "2. Using the dictionary from #1, write a loop that prints out both the key and value of each key-value pair, for example the first iteration of the loop should print 'one' 'uno'.", "para_3": "3. Write a function named some_squares that takes a positive integer parameter and returns a dictionary where the keys are the integers from 1 through the value of the parameter, and the corresponding values are the squares of those integers.\u00a0"}, "li_sentences": {}}}, "heading_sentences": ["Exploration: Dictionaries"], "__pre_h2__": {"pre_h2_para_sentences": {}, "pre_h2_li_sentences": {}}, "content_links": {"para_0": [0, 0], "para_1": [0, 0], "para_2": [0, 0], "para_3": [0, 0], "para_4": [0], "para_5": [0], "para_6": [0], "para_7": [0], "para_8": [0], "para_9": [0], "para_10": [0], "para_11": [0], "para_12": [0], "para_13": [0], "para_14": [0], "para_15": [0]}, "preh2_links": {}}